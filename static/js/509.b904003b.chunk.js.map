{"version":3,"file":"static/js/509.b904003b.chunk.js","mappings":"+SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,IAFjB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,mHC3BvB,EAAuB,2BAAvB,EAA4D,8BAA5D,EAAoG,8BAApG,EAA4I,8BAA5I,EAAuL,iC,SC0EvL,EApEqB,WAAO,IAAD,IAcAQ,EAbzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACFS,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAMhD,IAJAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAWC,GAASgB,KAAKT,EAC1B,GAAE,CAACP,IAECM,EAYL,OACE,iCACE,iBAAKW,UAAWC,EAAhB,WACE,4BACE,SAAC,KAAD,CAAMC,GAAIR,EAASS,QAASH,UAAWC,EAAvC,UACE,mBAAQD,UAAWC,EAAnB,+BAEF,gBACEG,IACEf,EAAMgB,YAAN,8CAC2ChB,EAAMgB,aADjD,+EAIFC,IAAG,UAAKjB,EAAMkB,aAGlB,iBAAKP,UAAWC,EAAhB,WACE,0BACGZ,EAAMkB,MADT,KACkBlB,EAAMmB,aAAaC,MAAM,EAAG,GAD9C,QAGA,yCA5BiBtB,EA4BeE,EAAMqB,aA3BrC,IAAIC,KAAKC,aAAa,UAAW,CACtCC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAO7B,EAAM,SAwBV,sCACA,uBAAIE,EAAM4B,YACV,oCACA,uBAAI5B,EAAM6B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAInD,iBAAKtB,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,8BAIN,SAAC,EAAAqB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["API/Api.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '16b38c03c30ede9b820f4f11ba02153b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetails_link__wf74g\",\"backBtn\":\"MovieDetails_backBtn__b0HiE\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"details\":\"MovieDetails_details__tmd20\",\"additional\":\"MovieDetails_additional__EaCvI\"};","import { Suspense, useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from 'API/Api';\n\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  function formatAsPercent(num) {\n    return new Intl.NumberFormat('default', {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(num / 10);\n  }\n\n  return (\n    <>\n      <div className={s.wrapper}>\n        <div>\n          <Link to={backLink.current} className={s.link}>\n            <button className={s.backBtn}>‚Üê Go back</button>\n          </Link>\n          <img\n            src={\n              movie.poster_path\n                ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n            }\n            alt={`${movie.title}`}\n          />\n        </div>\n        <div className={s.details}>\n          <h2>\n            {movie.title} ({movie.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {formatAsPercent(movie.vote_average)}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(' / ')}</p>\n        </div>\n      </div>\n\n      <div className={s.additional}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","axios","getTrending","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","num","useState","movie","setMovie","useParams","location","useLocation","backLink","useRef","state","from","useEffect","then","className","s","to","current","src","poster_path","alt","title","release_date","slice","vote_average","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}